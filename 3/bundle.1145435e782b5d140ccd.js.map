{"version":3,"file":"bundle.1145435e782b5d140ccd.js","mappings":"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","sources":["webpack://big-trip/./src/render.js","webpack://big-trip/./src/const.js","webpack://big-trip/./src/view/sort-view.js","webpack://big-trip/./src/view/events-list-view.js","webpack://big-trip/./src/view/event-item-view.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/view/form-add-event-view.js","webpack://big-trip/./src/view/form-edit-event-view.js","webpack://big-trip/./src/view/board-view.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/view/filters-view.js","webpack://big-trip/./src/presenter/board-presenter.js"],"sourcesContent":["const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport {RenderPosition, createElement, render};\n","\nconst EVENT_OFFERS = [\n  {\n    name: 'luggage',\n    title: 'Add luggage',\n    price: '30'\n  },\n  {\n    name: 'comfort',\n    title: 'Switch to comfort class',\n    price: '100'\n  },\n  {\n    name: 'meal',\n    title: 'Add meal',\n    price: '15'\n  },\n  {\n    name: 'seats',\n    title: 'Choose seats',\n    price: '5'\n  },\n  {\n    name: 'train',\n    title: 'Travel by train',\n    price: '40'\n  },\n];\n\nconst PHOTOS_AMOUNT = 5;\n\nconst FILTER_TYPES = ['everything', 'future', 'present', 'past'];\n\nconst SORT_TYPE = ['day', 'event', 'time', 'price', 'offers'];\n\nconst EVENT_TYPE = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\n\nconst EVENTS_AMOUNT = 3;\n\nexport { EVENT_OFFERS, PHOTOS_AMOUNT, FILTER_TYPES, SORT_TYPE, EVENTS_AMOUNT, EVENT_TYPE };\n","import { createElement } from '../render.js';\nimport { SORT_TYPE } from '../const.js';\n\nfunction createSortItemTemplate(type) {\n  return `<div class=\"trip-sort__item  trip-sort__item--${type}\">\n              <input id=\"sort-${type}\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-${type}\">\n              <label class=\"trip-sort__btn\" for=\"sort-${type}\">${type}</label>\n            </div>\n            `;\n}\n\nconst addSortList = () => SORT_TYPE.map((type) => createSortItemTemplate(type)).join('');\n\nfunction createSortTemplate() {\n  return `<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n            ${addSortList()}\n          </form>`;\n}\n\nexport default class SortView{\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\n\nfunction createEventsListTemplate() {\n  return '<ul class=\"trip-events__list\"></ul>';\n}\n\nexport default class EventListView{\n  getTemplate() {\n    return createEventsListTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import { createElement } from '../render.js';\n\nfunction createEventItemTemplate() {\n  return ` <li class=\"trip-events__item\">\n              <div class=\"event\">\n                <time class=\"event__date\" datetime=\"2019-03-18\">MAR 18</time>\n                <div class=\"event__type\">\n                  <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/check-in.png\" alt=\"Event type icon\">\n                </div>\n                <h3 class=\"event__title\">Check-in Chamonix</h3>\n                <div class=\"event__schedule\">\n                  <p class=\"event__time\">\n                    <time class=\"event__start-time\" datetime=\"2019-03-18T12:25\">16:20</time>\n                    &mdash;\n                    <time class=\"event__end-time\" datetime=\"2019-03-18T13:35\">17:00</time>\n                  </p>\n                  <p class=\"event__duration\">40M</p>\n                </div>\n                <p class=\"event__price\">\n                  &euro;&nbsp;<span class=\"event__price-value\">600</span>\n                </p>\n                <h4 class=\"visually-hidden\">Offers:</h4>\n                <ul class=\"event__selected-offers\">\n                  <li class=\"event__offer\">\n                    <span class=\"event__offer-title\">Add breakfast</span>\n                    &plus;&euro;&nbsp;\n                    <span class=\"event__offer-price\">50</span>\n                  </li>\n                </ul>\n                <button class=\"event__favorite-btn event__favorite-btn--active\" type=\"button\">\n                  <span class=\"visually-hidden\">Add to favorite</span>\n                  <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                    <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n                  </svg>\n                </button>\n                <button class=\"event__rollup-btn\" type=\"button\">\n                  <span class=\"visually-hidden\">Open event</span>\n                </button>\n              </div>\n            </li>\n            `;\n}\n\nexport default class EventItemView{\n  getTemplate() {\n    return createEventItemTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","\n//Использование замыканий для увеличения числа на единицу\nconst increaseNumber = () =>{\n  let num = 1;\n  return () => num++;\n};\n\nexport { increaseNumber };\n","import { createElement } from '../render.js';\nimport { increaseNumber } from '../utils.js';\nimport { EVENT_OFFERS, PHOTOS_AMOUNT, EVENT_TYPE } from '../const.js';\n\n//Замыкание для создания id с другим номером\nconst increment = increaseNumber();\n\nfunction createEventTypeItemTemplate(type, num) {\n  return `\n    <div class=\"event__type-item\">\n      <input id=\"event-type-${type}-${num}\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${type}\">\n      <label class=\"event__type-label  event__type-label--${type}\" for=\"event-type-${type}-${num}\">${type}</label>\n    </div>\n  `;\n}\n\nconst addEventTypeList = () => {\n  const num = increment();\n  return EVENT_TYPE.map((type) => createEventTypeItemTemplate(type, num)).join('');\n};\n\nfunction createFormHeaderTemplate() {\n  const num = increment();\n  return `\n    <header class=\"event__header\">\n                  <div class=\"event__type-wrapper\">\n                    <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-${num}\">\n                      <span class=\"visually-hidden\">Choose event type</span>\n                      <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n                    </label>\n                    <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-${num}\" type=\"checkbox\">\n\n                    <div class=\"event__type-list\">\n                      <fieldset class=\"event__type-group\">\n                        <legend class=\"visually-hidden\">Event type</legend>\n\n                        ${addEventTypeList()}\n                      </fieldset>\n                    </div>\n                  </div>\n\n                  <div class=\"event__field-group  event__field-group--destination\">\n                    <label class=\"event__label  event__type-output\" for=\"event-destination-${num}\">\n                      Flight\n                    </label>\n                    <input class=\"event__input  event__input--destination\" id=\"event-destination-${num}\" type=\"text\" name=\"event-destination\" value=\"Geneva\" list=\"destination-list-1\">\n                    <datalist id=\"destination-list-${num}\">\n                      <option value=\"Amsterdam\"></option>\n                      <option value=\"Geneva\"></option>\n                      <option value=\"Chamonix\"></option>\n                    </datalist>\n                  </div>\n\n                  <div class=\"event__field-group  event__field-group--time\">\n                    <label class=\"visually-hidden\" for=\"event-start-time-${num}\">From</label>\n                    <input class=\"event__input  event__input--time\" id=\"event-start-time-${num}\" type=\"text\" name=\"event-start-time\" value=\"19/03/19 00:00\">\n                    &mdash;\n                    <label class=\"visually-hidden\" for=\"event-end-time-${num}\">To</label>\n                    <input class=\"event__input  event__input--time\" id=\"event-end-time-${num}\" type=\"text\" name=\"event-end-time\" value=\"19/03/19 00:00\">\n                  </div>\n\n                  <div class=\"event__field-group  event__field-group--price\">\n                    <label class=\"event__label\" for=\"event-price-${num}\">\n                      <span class=\"visually-hidden\">Price</span>\n                      &euro;\n                    </label>\n                    <input class=\"event__input  event__input--price\" id=\"event-price-${num}\" type=\"text\" name=\"event-price\" value=\"\">\n                  </div>\n\n                  <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n                  <button class=\"event__reset-btn\" type=\"reset\">Cancel</button>\n                </header>\n  `;\n}\n\nfunction createEventOfferTemplate(offer, num){\n\n  return `\n    <div class=\"event__offer-selector\">\n                        <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${offer.name}-${num}\" type=\"checkbox\" name=\"event-offer-${offer.name}\">\n                        <label class=\"event__offer-label\" for=\"event-offer-${offer.name}-${num}\">\n                          <span class=\"event__offer-title\">${offer.title}</span>\n                          &plus;&euro;&nbsp;\n                          <span class=\"event__offer-price\">${offer.price}</span>\n                        </label>\n                      </div>\n  `;\n}\n\nfunction createEventPhotoTemplate(number){\n  return `<img class=\"event__photo\" src=\"img/photos/${number}.jpg\" alt=\"Event photo\">`;\n}\n\nfunction addPhotoList(){\n  let template = '';\n  for (let i = 1; i <= PHOTOS_AMOUNT; i++) {\n    template += createEventPhotoTemplate(i);\n  }\n  return template;\n}\n\nfunction createEventPhotoContainerTemplate(){\n  return `\n    <div class=\"event__photos-container\">\n                      <div class=\"event__photos-tape\">\n                      ${addPhotoList()}\n                      </div>\n                    </div>\n  `;\n}\n\nconst addOfferList = () => {\n  const num = increment();\n  return EVENT_OFFERS.map((offer) => createEventOfferTemplate(offer, num)).join('');\n};\n\nfunction createEventDestinationTemplate(addPhoto = false) {\n  return `\n    <section class=\"event__section  event__section--destination\">\n                    <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n                    <p class=\"event__destination-description\">Geneva is a city in Switzerland that lies at the southern tip of expansive Lac Léman (Lake Geneva). Surrounded by the Alps and Jura mountains, the city has views of dramatic Mont Blanc.</p>\n\n                    ${addPhoto ? createEventPhotoContainerTemplate() : ''}\n                  </section>\n  `;\n}\n\nfunction createEventDetailsTemplate(offer, destination) {\n  return `\n      <section class=\"event__details\">\n                  <section class=\"event__section  event__section--offers\">\n                    <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n\n                    <div class=\"event__available-offers\">\n                      ${offer}\n                    </div>\n                  </section>\n                  ${destination}\n                </section>\n  `;\n}\n\nfunction createFormAddEventTemplate() {\n  return `\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      ${createFormHeaderTemplate()}\n      ${createEventDetailsTemplate(addOfferList(), createEventDestinationTemplate(true))}\n    </form>\n  `;\n}\n\n\nexport default class FormAddEventView{\n  getTemplate() {\n    return createFormAddEventTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\nexport {addOfferList, createEventDetailsTemplate, createEventDestinationTemplate, addEventTypeList, increment };\n","import { createElement } from '../render.js';\nimport {addOfferList, createEventDetailsTemplate, createEventDestinationTemplate, addEventTypeList, increment } from './form-add-event-view.js';\n\nfunction createFormEditHeaderTemplate() {\n  const num = increment();\n  return `\n    <header class=\"event__header\">\n                  <div class=\"event__type-wrapper\">\n                    <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-${num}\">\n                      <span class=\"visually-hidden\">Choose event type</span>\n                      <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n                    </label>\n                    <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-${num}\" type=\"checkbox\">\n\n                    <div class=\"event__type-list\">\n                      <fieldset class=\"event__type-group\">\n                        <legend class=\"visually-hidden\">Event type</legend>\n\n                        ${addEventTypeList()}\n                      </fieldset>\n                    </div>\n                  </div>\n\n                  <div class=\"event__field-group  event__field-group--destination\">\n                    <label class=\"event__label  event__type-output\" for=\"event-destination-${num}\">\n                      Flight\n                    </label>\n                    <input class=\"event__input  event__input--destination\" id=\"event-destination-${num}\" type=\"text\" name=\"event-destination\" value=\"Chamonix\" list=\"destination-list-${num}\">\n                    <datalist id=\"destination-list-${num}\">\n                      <option value=\"Amsterdam\"></option>\n                      <option value=\"Geneva\"></option>\n                      <option value=\"Chamonix\"></option>\n                    </datalist>\n                  </div>\n\n                  <div class=\"event__field-group  event__field-group--time\">\n                    <label class=\"visually-hidden\" for=\"event-start-time-${num}\">From</label>\n                    <input class=\"event__input  event__input--time\" id=\"event-start-time-${num}\" type=\"text\" name=\"event-start-time\" value=\"18/03/19 12:25\">\n                    &mdash;\n                    <label class=\"visually-hidden\" for=\"event-end-time-${num}\">To</label>\n                    <input class=\"event__input  event__input--time\" id=\"event-end-time-${num}\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 13:35\">\n                  </div>\n\n                  <div class=\"event__field-group  event__field-group--price\">\n                    <label class=\"event__label\" for=\"event-price-${num}\">\n                      <span class=\"visually-hidden\">Price</span>\n                      &euro;\n                    </label>\n                    <input class=\"event__input  event__input--price\" id=\"event-price-${num}\" type=\"text\" name=\"event-price\" value=\"160\">\n                  </div>\n\n                  <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n                  <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n                  <button class=\"event__rollup-btn\" type=\"button\">\n                    <span class=\"visually-hidden\">Open event</span>\n                  </button>\n                </header>\n  `;\n}\n\nfunction createFormEditEventTemplate () {\n  return `\n  <form class=\"event event--edit\" action=\"#\" method=\"post\">\n    ${createFormEditHeaderTemplate()}\n    ${createEventDetailsTemplate(addOfferList(), createEventDestinationTemplate())}\n  </form>\n  `;\n}\n\nexport default class FormEditEventView{\n  getTemplate() {\n    return createFormEditEventTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\n\nfunction createBoardTemplate() {\n  return `\n    <section class=\"trip-events\">\n      <h2 class=\"visually-hidden\">Trip events</h2>\n    </section>\n  `;\n}\n\nexport default class BoardView{\n  getTemplate() {\n    return createBoardTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import FiltersView from './view/filters-view.js';\nimport BoardPresenter from './presenter/board-presenter.js';\nimport { render } from './render.js';\n\nconst siteTripControlsFilters = document.querySelector('.trip-controls__filters');\nrender(new FiltersView, siteTripControlsFilters);\n\nconst bodyMainContainer = document.querySelector('main .page-body__container');\nconst boardPresenter = new BoardPresenter({boardContainer: bodyMainContainer});\n\nboardPresenter.init();\n","import { createElement } from '../render.js';\nimport { FILTER_TYPES } from '../const.js';\n\nfunction createFilterItemTemplate(type) {\n  return `<div class=\"trip-filters__filter\">\n                  <input id=\"filter-${type}\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"${type}\">\n                  <label class=\"trip-filters__filter-label\" for=\"filter-${type}\">${type}</label>\n                </div>\n`;\n}\n\nconst addFiltersList = () => FILTER_TYPES.map((type) => createFilterItemTemplate(type)).join('');\n\nfunction createFiltersTemplate() {\n  return `<form class=\"trip-filters\" action=\"#\" method=\"get\">\n  ${addFiltersList()}\n  <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n          </form>`;\n}\n\nexport default class FiltersView{\n  getTemplate() {\n    return createFiltersTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import SortView from '../view/sort-view.js';\nimport EventListView from '../view/events-list-view.js';\nimport EventItemView from '../view/event-item-view.js';\nimport FormAddEventView from '../view/form-add-event-view.js';\nimport FormEditEventView from '../view/form-edit-event-view.js';\nimport BoardView from '../view/board-view.js';\nimport {EVENTS_AMOUNT} from '../const.js';\nimport { render } from '../render.js';\n\nexport default class BoardPresenter {\n  boardComponent = new BoardView;\n  eventListComponent = new EventListView;\n\n  constructor({boardContainer}) {\n    this.boardContainer = boardContainer;\n  }\n\n  init() {\n    render(this.boardComponent, this.boardContainer);\n    render(this.eventListComponent, this.boardContainer);\n    render(new SortView, this.boardComponent.getElement());\n    render(new FormAddEventView, this.boardComponent.getElement());\n\n    for (let i = 0; i < EVENTS_AMOUNT; i++) {\n      render(new EventItemView, this.eventListComponent.getElement());\n    }\n\n    render(new FormEditEventView, this.boardContainer);\n  }\n}\n\n\n"],"names":["createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","getElement","EVENT_OFFERS","name","title","price","PHOTOS_AMOUNT","FILTER_TYPES","SORT_TYPE","EVENT_TYPE","SortView","getTemplate","map","type","createSortItemTemplate","join","this","element","removeElement","EventListView","EventItemView","increment","increaseNumber","num","addEventTypeList","createEventTypeItemTemplate","addOfferList","offer","createEventOfferTemplate","createEventDestinationTemplate","addPhoto","i","addPhotoList","createEventDetailsTemplate","destination","FormAddEventView","createFormHeaderTemplate","FormEditEventView","createFormEditHeaderTemplate","BoardView","siteTripControlsFilters","querySelector","createFilterItemTemplate","bodyMainContainer","boardComponent","eventListComponent","constructor","boardContainer","init"],"sourceRoot":""}